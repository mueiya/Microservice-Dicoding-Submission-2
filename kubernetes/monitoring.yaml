---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring # Make the namespace for monitoring

---
# Deploy prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment # Set the deployment name
  namespace: monitoring # Set the namespace to monitoring
spec:
  replicas: 1 # Set the amout of needed replica, in this case 1
  selector:
    matchLabels:
      app: prometheus # select the prometeus label
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest # Image to use
        ports:
        - containerPort: 9090 # port for the container
        resources: # managing the memory usage
          limits:
            memory: 512Mi
          requests:
            memory: 256Mi
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config  # The config
---
# Prometheus Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - target_label: __metric_path__
          replacement: /metrics/cadvisor

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: ^metrics$
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
          action: replace
          target_label: pod
          separator: /
        - source_labels: [app]  # Updated label name to 'app'
          action: replace
          target_label: app

      - job_name: 'kubernetes-apiserver'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
        - role: endpoints

      - job_name: 'kube-state-metrics'
        static_configs:
        - targets: ['kube-state-metrics:8181']

---
# Prometheus service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring # Set the namespace to monitoring
spec:
  selector:
    app: prometheus
  ports:
  - protocol: TCP
    port: 9090 # Exposed port
    targetPort: 9090
  type: NodePort

---
# Deploy Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring # Set the namespace to monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest # Image to use
        ports:
        - containerPort: 3000 # port for the container
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 256Mi

---
# Grafana service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring # Set the namespace to monitoring
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000 # Exposed port
    targetPort: 3000
  type: NodePort
